/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. 
 *
 * Copied from https://searchfox.org/mozilla-central/source/toolkit/themes/shared/aboutReader.css and JSON.stringified.
 */
export default "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this file,\n * You can obtain one at http://mozilla.org/MPL/2.0/. Copied from https://searchfox.org/mozilla-central/source/toolkit/themes/shared/aboutReader.css */\n\n/* Avoid adding ID selector rules in this style sheet, since they could\n * inadvertently match elements in the article content. */\n:root {\n  --body-padding: 64px;\n  --popup-border: rgba(0, 0, 0, 0.12);\n  --opaque-popup-border: #e0e0e0;\n  --popup-shadow: rgba(49, 49, 49, 0.3);\n  --grey-90-a10: rgba(12, 12, 13, 0.1);\n  --grey-90-a20: rgba(12, 12, 13, 0.2);\n  --grey-90-a30: rgba(12, 12, 13, 0.3);\n  --grey-90-a80: rgba(12, 12, 13, 0.8);\n  --grey-30: #d7d7db;\n  --blue-40: #45a1ff;\n  --blue-40-a30: rgba(69, 161, 255, 0.3);\n  --blue-60: #0060df;\n  --active-color: #0B83FF;\n  --font-size: 12;\n  --content-width: 22em;\n  --line-height: 1.6em;\n  --tooltip-background: var(--grey-90-a80);\n  --tooltip-foreground: white;\n  --toolbar-button-hover: var(--grey-90-a10);\n  --toolbar-button-active: var(--grey-90-a20);\n}\n\nbody {\n  --main-background: #fff;\n  --main-foreground: #333;\n  --toolbar-border: var(--grey-90-a20);\n  --toolbar-box-shadow: var(--grey-90-a10);\n  --popup-button-hover: hsla(0,0%,70%,.4);\n  --popup-button-active: hsla(240,5%,5%,.15);\n  --popup-bgcolor: white;\n  --popup-button: #edecf0;\n  --selected-fonttype-background: var(--blue-40-a30);\n  --selected-border: var(--blue-40);\n  --popup-line: var(--grey-30);\n  --font-value-border: var(--grey-30);\n  --font-color: #000000;\n  --icon-fill: #3b3b3c;\n  --icon-disabled-fill: #8080807F;\n  /* light colours */\n}\n\nbody.sepia {\n  --main-background: #f4ecd8;\n  --main-foreground: #5b4636;\n  --toolbar-border: #5b4636;\n}\n\nbody.dark {\n  --main-background: #333;\n  --main-foreground: #eee;\n  --toolbar-border: #4a4a4b;\n  --toolbar-box-shadow: black;\n  --toolbar-button-hover: var(--grey-90-a30);\n  --toolbar-button-active: var(--grey-90-a80);\n  --popup-button-active: hsla(0,0%,70%,.6);\n  --popup-bgcolor: #4c4a50;\n  --popup-button: #5c5c61;\n  --popup-line: #5c5c61;\n  --opaque-popup-border: #434146;\n  --font-value-border: #656468;\n  --font-color: #fff;\n  --icon-fill: #fff;\n  --icon-disabled-fill: #ffffff66;\n  --tooltip-background: black;\n  --tooltip-foreground: white;\n  /* dark colours */\n}\n\nbody {\n  margin: 0;\n  padding: var(--body-padding);\n  background-color: var(--main-background);\n  color: var(--main-foreground);\n}\n\nbody.loaded {\n  transition: color 0.4s, background-color 0.4s;\n}\n\nbody.dark *::-moz-selection {\n  background-color: #FFFFFF;\n  color: #0095DD;\n}\nbody.dark a::-moz-selection {\n  color: #DD4800;\n}\n\nbody.sans-serif,\nbody.sans-serif .remove-button {\n  font-family: Helvetica, Arial, sans-serif;\n}\n\nbody.serif,\nbody.serif .remove-button {\n  font-family: Georgia, \"Times New Roman\", serif;\n}\n\n.container {\n  margin: 0 auto;\n  font-size: var(--font-size);\n  max-width: var(--content-width);\n  line-height: var(--line-height);\n}\n\n/* Override some controls and content styles based on color scheme */\n\nbody.light > .container > .header > .domain {\n  border-bottom-color: #333333 !important;\n}\n\nbody.sepia > .container > .header > .domain {\n  border-bottom-color: #5b4636 !important;\n}\n\nbody.dark > .container > .header > .domain {\n  border-bottom-color: #eeeeee !important;\n}\n\nbody.sepia > .container > .footer {\n  background-color: #dedad4 !important;\n}\n\nbody.light blockquote {\n  border-inline-start: 2px solid #333333 !important;\n}\n\nbody.sepia blockquote {\n  border-inline-start: 2px solid #5b4636 !important;\n}\n\nbody.dark blockquote {\n  border-inline-start: 2px solid #eeeeee !important;\n}\n\n.light-button {\n  color: #333333;\n  background-color: #ffffff;\n}\n\n.dark-button {\n  color: #eeeeee;\n  background-color: #333333;\n}\n\n.sepia-button {\n  color: #5b4636;\n  background-color: #f4ecd8;\n}\n\n/* Loading/error message */\n\n.reader-message {\n  margin-top: 40px;\n  display: none;\n  text-align: center;\n  width: 100%;\n  font-size: 0.9em;\n}\n\n/* Detector element to see if we're at the top of the doc or not. */\n.top-anchor {\n  position: absolute;\n  top: 0;\n  width: 0;\n  height: 5px;\n  pointer-events: none;\n}\n\n/* Header */\n\n.header {\n  text-align: start;\n  display: none;\n}\n\n.domain {\n  font-size: 0.9em;\n  line-height: 1.48em;\n  padding-bottom: 4px;\n  font-family: Helvetica, Arial, sans-serif;\n  text-decoration: none;\n  border-bottom: 1px solid;\n  color: #0095dd;\n}\n\n.header > h1 {\n  font-size: 1.6em;\n  line-height: 1.25em;\n  width: 100%;\n  margin: 30px 0;\n  padding: 0;\n}\n\n.header > .credits {\n  font-size: 0.9em;\n  line-height: 1.48em;\n  margin: 0 0 10px;\n  padding: 0;\n  font-style: italic;\n}\n\n.header > .meta-data {\n  font-size: 0.65em;\n  margin: 0 0 15px;\n}\n\n.reader-estimated-time {\n  text-align: match-parent;\n}\n\n/*======= Controls toolbar =======*/\n\n.toolbar-container {\n  position: sticky;\n  z-index: 2;\n  top: 32px;\n  height: 0; /* take up no space, so body is at the top. */\n\n  /* As a stick container, we're positioned relative to the body. Move us to\n   * the edge of the viewport using margins, and take the width of\n   * the body padding into account for calculating our width.\n   */\n  margin-inline-start: calc(-1 * var(--body-padding));\n  width: max(var(--body-padding), calc((100% - var(--content-width)) / 2 + var(--body-padding)));\n  font-size: var(--font-size); /* Needed to ensure `em` units match, is reset for .reader-controls */\n}\n\n.toolbar {\n  padding-block: 16px;\n  border: 1px solid var(--toolbar-border);\n  border-radius: 6px;\n  box-shadow: 0 2px 8px var(--toolbar-box-shadow);\n\n  width: 32px; /* basic width, without padding/border */\n\n  /* padding should be 16px, except if there's not enough space for that, in\n   * which case use half the available space for padding (=25% on each side).\n   * The 34px here is the width + borders. We use a variable because we need\n   * to know this size for the margin calculation.\n   */\n  --inline-padding: min(16px, calc(25% - 0.25 * 34px));\n  padding-inline: var(--inline-padding);\n\n  /* Keep a maximum of 96px distance to the body, but center once the margin\n   * gets too small. We need to set the start margin, however...\n   * To center, we'd want 50% of the container, but we'd subtract half our\n   * own width (16px) and half the border (1px) and the inline padding.\n   * When the other margin would be 96px, we want 100% - 96px - the complete\n   * width of the actual toolbar (34px + 2 * padding)\n   */\n  margin-inline-start: max(calc(50% - 17px - var(--inline-padding)), calc(100% - 96px - 34px - 2 * var(--inline-padding)));\n\n  font-family: Helvetica, Arial, sans-serif;\n  list-style: none;\n  -moz-user-select: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  .toolbar {\n    transition-property: border-color, box-shadow;\n    transition-duration: 250ms;\n  }\n\n  .toolbar .button {\n    transition-property: opacity;\n    transition-duration: 250ms;\n  }\n\n  .toolbar-container.scrolled .toolbar:not(:hover) {\n    border-color: transparent;\n    box-shadow: 0 2px 8px transparent;\n  }\n\n  .toolbar-container.scrolled .toolbar:not(:hover) .button {\n    opacity: 0.6;\n  }\n\n  .toolbar-container.transition-location {\n    transition-duration: 250ms;\n    transition-property: width;\n  }\n}\n\n.toolbar-container.overlaps .button {\n  opacity: 0.1;\n}\n\n.dropdown-open .toolbar {\n  border-color: transparent;\n  box-shadow: 0 2px 8px transparent;\n}\n\n.reader-controls {\n  /* We use `em`s above this node to get it to the right size. However,\n   * the UI inside the toolbar should use a fixed, smaller size. */\n  font-size: 11px;\n}\n\n.button {\n  position: relative;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  border: none;\n  border-radius: 4px;\n  margin: 4px 0;\n  background-color: transparent;\n  background-size: 16px 16px;\n  background-position: center;\n  background-repeat: no-repeat;\n  color: var(--font-color);\n}\n\n.button:hover,\n.button:-moz-focusring {\n  background-color: var(--toolbar-button-hover);\n}\n\n.open .button,\n.button:active {\n  background-color: var(--toolbar-button-active);\n  color: var(--active-color);\n  fill: var(--active-color);\n}\n\n.hover-label {\n  position: absolute;\n  top: 4px;\n  inset-inline-start: 36px;\n  line-height: 16px;\n  white-space: pre; /* make sure we don't wrap */\n  background-color: var(--tooltip-background);\n  color: var(--tooltip-foreground);\n  padding: 4px 8px;\n  border-radius: 2px;\n  visibility: hidden;\n  pointer-events: none;\n}\n\n.button:hover > .hover-label,\n.button:-moz-focusring > .hover-label {\n  visibility: visible;\n}\n\nbutton {\n  -moz-context-properties: fill;\n  color: var(--font-color);\n  fill: var(--icon-fill);\n}\n\nbutton:disabled {\n  fill: var(--icon-disabled-fill);\n}\n\n.toolbar button::-moz-focus-inner {\n  border: 0;\n}\n\n.dropdown {\n  text-align: center;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  position: relative;\n}\n\n.dropdown li {\n  margin: 0;\n  padding: 0;\n}\n\n/* Don't show hover styles while dropdowns are open, except in the dropdown. */\n.dropdown-open {\n  pointer-events: none;\n}\n\n.dropdown-open .dropdown-popup {\n  pointer-events: initial;\n}\n\n/*======= Popup =======*/\n\n.dropdown .dropdown-popup {\n  text-align: start;\n  position: absolute;\n  inset-inline-start: 40px;\n  z-index: 1000;\n  background-color: var(--popup-bgcolor);\n  visibility: hidden;\n  border-radius: 4px;\n  border: 1px solid var(--popup-border);\n  box-shadow: 0 4px 6px 0 var(--popup-shadow);\n  border-bottom-width: 0;\n  top: 0;\n}\n\n.open > .dropdown-popup {\n  visibility: visible;\n}\n\n.dropdown-arrow {\n  position: absolute;\n  height: 24px;\n  width: 16px;\n  inset-inline-start: -16px;\n  background-image: url(\"chrome://global/skin/reader/RM-Type-Controls-Arrow.svg\");\n  display: block;\n  -moz-context-properties: fill, stroke;\n  fill: var(--popup-bgcolor);\n  stroke: var(--opaque-popup-border);\n  pointer-events: none;\n}\n\n.dropdown-arrow:dir(rtl) {\n  transform: scaleX(-1);\n}\n\n/* Align the style dropdown arrow (narrate does its own) */\n.style-dropdown .dropdown-arrow {\n  top: 7px;\n}\n\n/*======= Font style popup =======*/\n\n.radio-button {\n  /* We visually hide these, but we keep them around so they can be focused\n   * and changed by interacting with them via the label, or the keyboard, or\n   * assistive technology.\n   */\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n}\n\n.radiorow,\n.buttonrow {\n  display: flex;\n}\n\n.content-width-value,\n.font-size-value,\n.line-height-value {\n  box-sizing: border-box;\n  width: 36px;\n  height: 15px;\n  line-height: 15px;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  margin: auto;\n  border-radius: 10px;\n  border: 1px solid var(--font-value-border);\n  background-color: var(--popup-button);\n}\n\n.buttonrow > button {\n  border: 0;\n  height: 60px;\n  width: 90px;\n  background-color: transparent;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n.buttonrow > button:enabled:hover,\n.buttonrow > button:enabled:-moz-focusring {\n  background-color: var(--popup-button-hover);\n}\n\n.buttonrow > button:enabled:active {\n  background-color: var(--popup-button-active);\n}\n\n.radiorow:not(:last-child),\n.buttonrow:not(:last-child) {\n  border-bottom: 1px solid var(--popup-line);\n}\n\n.radiorow > label {\n  position: relative;\n  box-sizing: border-box;\n  border-radius: 2px;\n  border: 2px solid var(--popup-border);\n}\n\n.radiorow > label[checked] {\n  border-color: var(--selected-border);\n}\n\n/* For the hover style, we draw a line under the item by means of a\n * pseudo-element. Because these items are variable height, and\n * because their contents are variable height, position it absolutely,\n * and give it a width of 100% (the content width) + 4px for the 2 * 2px\n * border width.\n */\n.radiorow > input[type=radio]:-moz-focusring + label::after,\n.radiorow > label:hover::after {\n  content: \"\";\n  display: block;\n  border-bottom: 2px solid var(--blue-40);\n  width: calc(100% + 4px);\n  position: absolute;\n  /* to skip the 2 * 2px border + 2px spacing. */\n  bottom: -6px;\n  /* Match the start of the 2px border of the element: */\n  inset-inline-start: -2px;\n}\n\n.color-scheme-buttons > label {\n  height: 34px;\n  width: 70px;\n  font-size: 12px;\n  /* Center the labels horizontally as well as vertically */\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  /* We want 10px between items, but there's no margin collapsing in flexbox. */\n  margin: 10px 5px;\n}\n\n.color-scheme-buttons > input:first-child + label {\n  margin-inline-start: 10px;\n}\n\n.color-scheme-buttons > label:last-child {\n  margin-inline-end: 10px;\n}\n\n.font-type-buttons > label {\n  height: 64px;\n  width: 105px;\n  /* Slightly more space between these items. */\n  margin: 10px;\n  /* Center the Sans-serif / Serif labels */\n  text-align: center;\n  background-size: 63px 39px;\n  background-repeat: no-repeat;\n  background-position: center 18px;\n  background-color: var(--popup-button);\n  fill: currentColor;\n  -moz-context-properties: fill;\n  /* This mostly matches baselines, but because of differences in font\n   * baselines between serif and sans-serif, this isn't always enough. */\n  line-height: 1;\n  padding-top: 2px;\n}\n\n.font-type-buttons > label[checked] {\n  background-color: var(--selected-fonttype-background);\n}\n\n.sans-serif-button {\n  font-family: Helvetica, Arial, sans-serif;\n  background-image: url(\"chrome://global/skin/reader/RM-Sans-Serif.svg\");\n}\n\n/* Tweak padding to match the baseline on mac */\n:root[platform=macosx] .sans-serif-button {\n  padding-top: 3px;\n}\n\n.serif-button {\n  font-family: Georgia, \"Times New Roman\", serif;\n  background-image: url(\"chrome://global/skin/reader/RM-Serif.svg\");\n}\n\n/*======= Toolbar icons =======*/\n\n.close-button {\n  -moz-context-properties: fill;\n  background-image: url(\"chrome://global/skin/reader/close-16.svg\");\n}\n\n.style-button {\n  background-image: url(\"chrome://global/skin/reader/RM-Type-Controls-24x24.svg\");\n}\n\n.minus-button {\n  background-size: 18px 18px;\n  background-image: url(\"chrome://global/skin/reader/RM-Minus-24x24.svg\");\n}\n\n.plus-button {\n  background-size: 18px 18px;\n  background-image: url(\"chrome://global/skin/reader/RM-Plus-24x24.svg\");\n}\n\n.content-width-minus-button {\n  background-size: 42px 16px;\n  background-image: url(\"chrome://global/skin/reader/RM-Content-Width-Minus-42x16.svg\");\n}\n\n.content-width-plus-button {\n  background-size: 44px 16px;\n  background-image: url(\"chrome://global/skin/reader/RM-Content-Width-Plus-44x16.svg\");\n}\n\n.line-height-minus-button {\n  background-size: 34px 14px;\n  background-image: url(\"chrome://global/skin/reader/RM-Line-Height-Minus-38x14.svg\");\n}\n\n.line-height-plus-button {\n  background-size: 34px 24px;\n  background-image: url(\"chrome://global/skin/reader/RM-Line-Height-Plus-38x24.svg\");\n}\n\n/* Mirror the line height buttons if the article is RTL. */\n.reader-controls[articledir=\"rtl\"] .line-height-minus-button,\n.reader-controls[articledir=\"rtl\"] .line-height-plus-button {\n  transform: scaleX(-1);\n}\n\n@media print {\n  .toolbar {\n    display: none !important;\n  }\n}\n\n/*======= Article content =======*/\n\n/* Note that any class names from the original article that we want to match on\n * must be added to CLASSES_TO_PRESERVE in ReaderMode.jsm, so that\n * Readability.js doesn't strip them out */\n\n.moz-reader-content {\n  display: none;\n  font-size: 1em;\n}\n\n@media print {\n  .moz-reader-content p,\n  .moz-reader-content code,\n  .moz-reader-content pre,\n  .moz-reader-content blockquote,\n  .moz-reader-content ul,\n  .moz-reader-content ol,\n  .moz-reader-content li,\n  .moz-reader-content figure,\n  .moz-reader-content .wp-caption {\n    margin: 0 0 10px !important;\n    padding: 0 !important;\n  }\n}\n\n.moz-reader-content h1,\n.moz-reader-content h2,\n.moz-reader-content h3 {\n  font-weight: bold;\n}\n\n.moz-reader-content h1 {\n  font-size: 1.6em;\n  line-height: 1.25em;\n}\n\n.moz-reader-content h2 {\n  font-size: 1.2em;\n  line-height: 1.51em;\n}\n\n.moz-reader-content h3 {\n  font-size: 1em;\n  line-height: 1.66em;\n}\n\n.moz-reader-content a:link {\n  text-decoration: underline;\n  font-weight: normal;\n}\n\n.moz-reader-content a:link,\n.moz-reader-content a:link:hover,\n.moz-reader-content a:link:active {\n  color: #0095dd;\n}\n\n.moz-reader-content a:visited {\n  color: #c2e;\n}\n\n.moz-reader-content * {\n  max-width: 100%;\n  height: auto;\n}\n\n.moz-reader-content p,\n.moz-reader-content p,\n.moz-reader-content code,\n.moz-reader-content pre,\n.moz-reader-content blockquote,\n.moz-reader-content ul,\n.moz-reader-content ol,\n.moz-reader-content li,\n.moz-reader-content figure,\n.moz-reader-content .wp-caption {\n  margin: -10px -10px 20px;\n  padding: 10px;\n  border-radius: 5px;\n}\n\n.moz-reader-content li {\n  margin-bottom: 0;\n}\n\n.moz-reader-content li > ul,\n.moz-reader-content li > ol {\n  margin-bottom: -10px;\n}\n\n.moz-reader-content p > img:only-child,\n.moz-reader-content p > a:only-child > img:only-child,\n.moz-reader-content .wp-caption img,\n.moz-reader-content figure img {\n  display: block;\n}\n\n.moz-reader-content img[moz-reader-center] {\n  margin-inline: auto;\n}\n\n.moz-reader-content .caption,\n.moz-reader-content .wp-caption-text\n.moz-reader-content figcaption {\n  font-size: 0.9em;\n  line-height: 1.48em;\n  font-style: italic;\n}\n\n.moz-reader-content code,\n.moz-reader-content pre {\n  white-space: pre-wrap;\n}\n\n.moz-reader-content blockquote {\n  padding: 0;\n  padding-inline-start: 16px;\n}\n\n.moz-reader-content ul,\n.moz-reader-content ol {\n  padding: 0;\n}\n\n.moz-reader-content ul {\n  padding-inline-start: 30px;\n  list-style: disc;\n}\n\n.moz-reader-content ol {\n  padding-inline-start: 30px;\n  list-style: decimal;\n}\n\ntable,\nth,\ntd {\n  border: 1px solid currentColor;\n  border-collapse: collapse;\n  padding: 6px;\n  vertical-align: top;\n}\n\ntable {\n  margin: 5px;\n}\n\n/* Visually hide (but don't display: none) screen reader elements */\n.moz-reader-content .visually-hidden,\n.moz-reader-content .visuallyhidden,\n.moz-reader-content .sr-only {\n  display: inline-block;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  border-width: 0;\n}\n\n/* Hide elements with common \"hidden\" class names */\n.moz-reader-content .hidden,\n.moz-reader-content .invisible {\n  display: none;\n}\n\n/* Enforce wordpress and similar emoji/smileys aren't sized to be full-width,\n * see bug 1399616 for context. */\n.moz-reader-content img.wp-smiley,\n.moz-reader-content img.emoji {\n  display: inline-block;\n  border-width: 0;\n  /* height: auto is implied from `.moz-reader-content *` rule. */\n  width: 1em;\n  margin: 0 .07em;\n  padding: 0;\n}\n\n.reader-show-element {\n  display: initial;\n}\n" 
